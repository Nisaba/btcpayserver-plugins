@using BTCPayServer.Abstractions.Extensions
@using BTCPayServer.Plugins.LnOnchainSwaps.Views
@using BTCPayServer.Client
@using BTCPayServer.Plugins.LnOnchainSwaps.Models
@using BTCPayServer.Services

@inject BTCPayServer.Plugins.LnOnchainSwaps.Services.LnOnchainSwapsPluginService LnOnchainSwapsPluginService
@inject DisplayFormatter DisplayFormatter

@{
    ViewData.SetActivePage(PluginNavPages.Index, "Lightning/Onchain Swaps plugin");
}


<table><tr>
        <td>
            <a href="https://www.LnOnchainSwaps.com/" target="mtp">
                <img src="/Resources/img/LnOnchainSwaps.png" />
            </a>
        </td>
        <td width="20" />
        <td>
            <h2>@ViewData["Title"]</h2>
            <br />
            <p>
                Allows you to forward received funds to <a href="https://www.LnOnchainSwaps.com/" target="_blank">LnOnchainSwaps</a>, a Swiss offramp provider. Get funds in fiat (EUR, CHF or other currencies) or make a swap to the crypto you want.<br />
                Please read our documentation <a href="https://github.com/LnOnchainSwaps/btcpay-plugin/blob/master/BTCPayServer.Plugins.LnOnchainSwaps/README.md" target="_blank">here</a>.
            </p>
        </td>
    </tr></table>
<br />

<partial name="_StatusMessage" />

<div permission="@Policies.CanCreateNonApprovedPullPayments,@Policies.CanManagePayouts">
    <br />
    <h4>Operations</h4>
    <br />
    @{
        var walletConfig = await LnOnchainSwapsPluginService.GetBalances(Model.StoreId, $"{Context.Request.Scheme}://{Context.Request.Host}");
     }
        <table class="table table-sm mt-0 mx-0">
            <tr>
                <td>
                    <input id="chkOnchain" name="chkNetwork" value="" type="radio" checked="checked" class="form-check-input mt-0 me-2" onchange="setLnOnchainSwapsValues()" />
                </td><td>
                    <h5>On Chain</h5>
                    @if (walletConfig.OnChainEnabled)
                    {
                        <p><b>Balance</b>: @walletConfig.OnChainBalance BTC  ~ @DisplayFormatter.Currency(walletConfig.OnChainFiatBalance, walletConfig.FiatCurrency)</p>
                    }
                    else
                    {
                        <p>On Chain wallet not configured</p>
                    }
                    @if (walletConfig.OnChainBalance == 0)
                    {
                        <p>No bitcoins available for sale</p>
                    }
                </td><td width="20"></td>
                <td>
                    <input id="chkLightning" name="chkNetwork" type="radio" class="form-check-input mt-0 me-2" onchange="setLnOnchainSwapsValues()" />
                </td><td>
                    <h5>Lightning</h5>
                    @if (walletConfig.OffChainEnabled)
                    {
                        <p><b>Balance</b>: @walletConfig.OffChainBalance BTC  ~ @DisplayFormatter.Currency(walletConfig.OffChainFiatBalance, walletConfig.FiatCurrency)</p>
                    }
                    else
                    {
                        <p>Lightning not configured</p>
                    }
                    @if (walletConfig.OffChainBalance == 0)
                    {
                        <p>No bitcoins available for sale</p>
                    }
                </td>
            </tr>
        </table>

        <table>
            <tr>
                <td>
                    Percent to sale/swap:&nbsp;
                    <input id="percentToSend" type="number" min="0" max="100" value="95" onchange="setLnOnchainSwapsValues()" />
                    <br />
                </td>
                <td width="25" />
                <td>
                    <label id="lblToSendBTC">@(walletConfig.OnChainBalance * (decimal)0.95)</label>&nbsp; BTC - &nbsp;
                    <label id="lblToSendFiat">@((int)(walletConfig.OnChainFiatBalance * (decimal)0.95))</label>&nbsp; @walletConfig.FiatCurrency
                </td>
                <td width="25" />
                <td><button id="btSend" class="btn btn-primary" onclick="onLnOnchainSwapsAsk()">Ask to Mt Pelerin</button></td>
            </tr>
        </table>
        <br />
            <i><small>Please check that there is no previous pending payout in BTCPay before placing another order.<br />
                For a sell, Mt Pelerin requires a minimum amount for a transaction, equivalent to 50 CHF (1 CHF for a swap).
            </small></i>
        <br />

        @if (Model.IsPayoutCreated)
        {
            <br />
            <div>
                <strong>Success!</strong> Your payout has been created.<br />
                If you have set an automatic payout processor, the payment will be sent automatically to Mt Pelerin.<br/>
                Otherwise, <a href="/stores/@Model.StoreId/payouts?payoutState=AwaitingPayment">click here</a> to validate the payout.<br />
                If an issue arises, please contact hello@LnOnchainSwaps.com.
            </div>
        }

        <script type="text/javascript">
        const OnChainBalance = @walletConfig.OnChainBalance;
        const OffChainBalance = @walletConfig.OffChainBalance;

        const lblToSendBTC = document.getElementById('lblToSendBTC');
        const lblToSendFiat = document.getElementById('lblToSendFiat');
        const percentToSend = document.getElementById('percentToSend');
        const chkOnchain = document.getElementById('chkOnchain');
        const confirmLnOnchainSwaps = document.getElementById('confirmLnOnchainSwaps');
        const sendSection = document.getElementById('sendSection');
        var popupLnOnchainSwaps;

        function setLnOnchainSwapsValues() {
            const percent = parseFloat(percentToSend.value) || 0;
            const isOnChain = document.getElementById('chkOnchain').checked;
            const fiatBalance = isOnChain ? @walletConfig.OnChainFiatBalance : @walletConfig.OffChainFiatBalance;
            const btcBalance = isOnChain ? OnChainBalance : OffChainBalance;

            lblToSendBTC.textContent = ((percent * btcBalance) / 100).toFixed(8);
            lblToSendFiat.textContent = Math.round((percent * fiatBalance) / 100);
        }

        function onLnOnchainSwapsAsk() {
            const percent = parseFloat(percentToSend.value) || 0;
            if (percent == 100) {
                alert('You must keep some sats for the transaction fees... Please reduce the amount');
                return;
            }
            const isOnChain = chkOnchain.checked;
            const balance = isOnChain ? OnChainBalance : OffChainBalance;
            const amountToSend = (percent * balance) / 100;

            if (amountToSend <= 0) return;

            const sNet = isOnChain ? 'bitcoin' : 'lightning';
        }

        function handleLnOnchainSwapsMessage(event) {
            if (event.origin !== 'https://widget.LnOnchainSwaps.com') return;
            if (event.data.type === 'orderCreated') {
                sendToLnOnchainSwaps(event.data.data);
                window.removeEventListener('message', handleLnOnchainSwapsMessage);
            }
        }

        function onConfirmChange() {
            sendSection.style.display = confirmLnOnchainSwaps.checked ? 'block' : 'none';
        }

        function sendToLnOnchainSwaps(createdOrderData) {
        }
        </script>
    }
</div>
